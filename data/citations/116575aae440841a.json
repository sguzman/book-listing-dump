[
  {
    "pages": [
      "698–699"
    ],
    "title": [
      "creating code, 700–702 business process reengineering, 249–250 library, 699–700 overview"
    ],
    "type": null
  },
  {
    "citation-number": [
      "804"
    ],
    "edition": [
      "2nd"
    ],
    "title": [
      "C++ All-in-One For Dummies"
    ],
    "type": null
  },
  {
    "author": [
      {
        "family": "library",
        "particle": "classes. See also streams"
      }
    ],
    "note": [
      "engineering software, 249–252 UML hierarchies of aggregating, 281–282 creating, 183–184 composing, 281–282 inheritance, types of, 184–185 inheritance, 280–281 overview, 182–183 mapping, 277–280 implementing, 156–160 overview, 276–277 inheritance classic menu, 754 adjusting access, 480–482 classifiers, 277, 312 friend classes, 492–493 clean section, 794 multiple, 486–489 cleanup code, 178 overloading, 482–486 close member function, 575 overriding, 482–486 closing files, 570–571 polymorphism, 477–480 CntrItem file, 758–759 virtual, 489–492 806 C++ All-in-One For Dummies, 2nd Edition"
    ],
    "pages": [
      "499–501"
    ],
    "title": [
      "UML overview, 322–326 abstract, 247–248 Standard C++ Library, 326–327 const keyword, 172–173 overview, 153–154, 248–254 constructors parts of, 163–164 adding parameters to, 181–182 recognizing, 229–230 overview, 178 singleton, 318–321 sampling, 179–181 static, 260 deriving class templates from, 524–525 static members, 312–313 deriving from class templates, 522–524 stereotypes and UML diagrams, 310–311 destructors streaming overview, 178–179 manipulating, 623–630 sampling, 179–181 overview, 619 determining for text formatting, 620–622 CRC cards, 253 structures versus, 439 hidden or missing classes, 253–254 templatizing, 503–514 searching for nouns and verbs, 252–253 this pointer variable, 173–175 documentation, 345 types within"
    ],
    "type": null,
    "volume": [
      "493"
    ]
  },
  {
    "note": [
      "overview, 322–326 DLL (Dynamic Link Library), 11, 261, Standard C++ Library, 326–327 283–285 overview, 317–318 doc\\: folder, 674 singleton classes, 318–321 dockable windows, 729–730"
    ],
    "pages": [
      "43–45"
    ],
    "title": [
      "derived classes (continued) moving, 616–618 protecting members when inheriting, overview, 609–618 238–239 renaming, 616–618 virtual inheritance, 489–492 Disable All Breakpoints option, 774 design patterns Disable Breakpoint option, 772 mediating with, 330–345 Disassembly window, Observer classes 368–369, 391–392, 409 automatically adding, 327–330 dividing variables"
    ],
    "type": null,
    "volume": [
      "37"
    ]
  },
  {
    "note": [
      "757–759 running application, 720–721 help file, 763–765 writing code faster Microsoft specified suggested changes, help resources, 721–722 759–760 IntelliSense, 722–723 registering/unregistering, 765–766 Microsoft Visual Studio. See also Microsoft resource changes, 760–763 Visual C++ 2008 creating, 749–756 Boost, 674 document/view architecture, 756–757 Build toolbar, 724"
    ],
    "title": [
      "MFC SDI project Win32 Console Application template in action, 766–767 adding code, 719–720 adding code defining project, 717–718 essential application files"
    ],
    "type": null
  },
  {
    "note": [
      "multiple, 90–91 static, 422 overview, 89–90 new function passwords, 198–199 initializers, 137–138 path, file, 576 overview, 135–137"
    ],
    "pages": [
      "419–421"
    ],
    "title": [
      "passing arrays of, 218–219 arrays changing variables using, 129–130 to functions, 219–221 complex, 413–418 multidimensional, 405–406 containing, 539–543 objects to functions, 170–172 freeing, 139–141 pointer variables to functions to functions, 418–419 string parameters, modifying, 144–145 heaps, 124–127 values, changing, 141–144 integer variables, pointing at, 133–134 by references, 149, 170–172 member functions variables pointing variables to"
    ],
    "type": null
  },
  {
    "note": [
      "665 setting, 375–376 project window, CodeBlocks, 14–15 CD, accompanying book, 799–800 projects debuggers defining, 10–15 parts of, 369 overview, 9–10 programming with, 361–369 prolog, 389 running, 363–368 proof of concept, 268 standard, 371 properties, 233, 235 debugging Properties button, Solution Explorer, 724 tracing through assembly code, 391–393 Properties Window, Visual Studio, 725–726, viewing threads, 390 739–740, 742 features protected constructors, 319, 497 versus bugs, 349–351 protected members configuring, 351–352 adjusting access, 480–482 inspecting variables, 378–379 encapsulating objects, 231–234 stacks hierarchies, 237–239, 242 moving about, 386–388 overview, 185 overview, 385–386 protected types, 500 storing local variables, 388–390 protocols, 599, 605"
    ],
    "title": [
      "private functions program listings, 3 encapsulating objects, 231–234 Project Build Options dialog box, 693–694, hierarchies, 237–239, 242–243 699–700, 708–709 inheritance, 184–185 Project Filename field overview, 165–167 Console Application wizard, 13 private types, 500 Static Library wizard, 665 problem-solving Project Location dialog box, 717–718 anticipating problems, 352–359 Project Style options, MFC Application avoiding problems, 359–360 Wizard, 750–751 breakpoints Project Title field enabling, 376–378 Console Application wizard, 12 overview, 373–374 Static Library wizard"
    ],
    "type": null
  },
  {
    "note": [
      "pointers, 539–543 double quotes, 118–119 references, 539–543 overview, 115–117 vector, 536–538 header wrappers, 121–122 copying containers, 564–566 linking, 785–787 deque, 561–562 sharing variables among, 119–121 Filesystem library, 709 spaces, as delimiters, 195 find algorithm, 645–646 specialized queues, 659–662 hashes, 640–642"
    ],
    "pages": [
      "118–119"
    ],
    "title": [
      "classes, 163–164 containers, 635 in CodeBlocks, 15 functors, 637–639 compiling, 785–788 iterators, 635–636 creating multiple overview, 634–635 in CodeBlocks, 110–112 utilities, 639 in other compilers, 112–113 classes, 572 overview, 109–110, 113–115 container classes function prototypes, 101 instances, 539–547 header files iterating through container, 547–551 adding once, 118 map, 538–539, 551 angle brackets"
    ],
    "type": null
  },
  {
    "pages": [
      "648–649"
    ],
    "title": [
      "Specify the Profiling Method list, 557–561 dialog, 780–781 min and max functions"
    ],
    "type": null
  },
  {
    "note": [
      "variables (continued) Performance Wizard, 779–781 implementing classes, 158–160 profiling code, 781–783 object state, 264 project types, 716–717 overview, 154–156 Solution Explorer, 723–724 private and protected, 231 standard toolbars, 724–725 read-only, 233",
      "763 structuring data version number, Windows, 719 expressing from either side, 429–431 versions, function, 243 overview, 427–429 View Class Diagram button, Solution values, changing, 33–34 Explorer, 724 watching, 380–383 View Code button, Solution Explorer, 724 Various Info button, 370 views, 747 VC++ (Visual C++) 2008 virtual functions appearance, modifying abstract, 247–248, 280–281 menus, 726–728 dynamic cast, 435 toolbars, 726–728 overview, 243–245 windows, 728–730 in UML, 280–281 application properties, changing, 725–726 virtual inheritance, 489–492 debugger virtual keypresses, 760–761 builds, 772 virtual keyword, 450, 489–492 overview, 371, 769–771 visible windows, 728–729 setting breakpoints, 772–774 Visual C++ (VC++) 2008 starting debugger, 775 appearance, modifying viewing breakpoints, 774 menus, 726–728 windows, 775–778 toolbars, 726–728 dynamic_cast keyword, 436 windows, 728–730 header files, 117 overview, 715–716 Index 833"
    ],
    "title": [
      "Win32 Console Application template naming, 36–37 adding code, 719–720 passing into functions defining project, 717–718 multiple, 90–91 running application, 720–721 overview, 89–90 writing code faster pointer help resources, 721–722 common mistakes, 360 IntelliSense, 722–723 defined, 128 vector datatype list class, 327 container classes, 536–538 passing objects to functions, 170–172 deque versus, 563 passing to arrays, 219–220 find algorithm, 645–646 passing to functions, 141–145 iterating, 550–551 returning from functions, 145–148 lists versus, 561 returning structures from functions, 442 overview, 355–358 specifying to arrays, 409 random access iterator, 643–645 this, 173–175 specialized queues, 661 pointing to member functions, 419–421 - -version command-line switch, references, 423–425 683–684, 690 sharing among source-code files, 119–121 Version folder"
    ],
    "type": null
  }
]
