[
  {
    "author": [
      {
        "family": "instructions",
        "given": "P.U.S.H."
      }
    ],
    "pages": [
      "474–475"
    ],
    "title": [
      "249–251 AT&T mnemonic conventions returning to Linux kernel services from AT&T memory reference syntax"
    ],
    "type": null
  },
  {
    "note": [
      "Load Effective Address), 315–316, 537 dependencies, 187–188 lease significant byte (LSB), of BX register, file updates and, 189"
    ],
    "title": [
      "laundry list Linux tools computer program as, 1–2 adding items to Kate toolbar, 167–168 tests in, 2–3 chains of dependencies, 189–191 ld linker character encoding in Konsole, 177–178 building code in C and, 443 configuring Kate, 160–162 linking program with, 145–146 console applications, 176–177 LEA"
    ],
    "type": null
  },
  {
    "note": [
      "LOOP (Loop until CX/ECX=0) (continued) reference,",
      "closing outer loop, 422–423 macros decrementing EXC register, 408–409 defining with parameters, 385–386 nested instruction loops, 420–421 invoking, 386–387 repeating instructions with, 219–220 local labels within, 387–388 scanning a buffer and, 272 macro libraries as include files, 388–389 LSB (lease significant byte), of BX register, mechanics of defining, 379–385"
    ],
    "pages": [
      "421–422 216–218"
    ],
    "title": [
      "230–232 decrementing EXC register, 408–409 register data and register addressing, displaying ruler on screen, 409 207–209 reference, 538–539 sandbox for experimenting with, 201–202 LOOPNZ/LOOPNE (Loop while CX/ECX>0 signed and unsigned values, 221 and ZF=0), 540 size of memory data, 211 LOOPNZ/LOOPNE (Loop while CX/ECX>0 slowness of MUL and DIV, 229–230 and ZF=1), 541 source and destination operands, 205 loops watching flags with Insight’s Register view, closing inner loop"
    ],
    "type": null
  },
  {
    "container-title": [
      "memory"
    ],
    "note": [
      "54 sandbox, 202–204 switches as on/off memory device, MOVSX , 224–225 47–48 MUL, 226–228 terms for, 85 NEG , 233–236 units of measurement, 54–55 negative numbers and, 221–224 memory access time, memory chips, real mode and,"
    ],
    "pages": [
      "82–83",
      "211–212 53–54"
    ],
    "title": [
      "flags reference, 232 mathematics, emphasis on applied immediate data and immediate addressing, mathematics in schools, 15–16 205–207 megabits (M), of memory, 51 implicit operands, 225–226 megabytes (MB",
      "INC and DEC, 215–216 memory list of, 507–509 defined, 48 memory data, 209–210 principle of staying out of memory minimal NASM program for use with (Abrash"
    ],
    "type": "article-journal",
    "volume": [
      "56"
    ]
  },
  {
    "author": [
      {
        "family": "procedures",
        "given": "see also R.E.T."
      }
    ],
    "note": [
      "returning, 337–338 PSP (program segment prefix), 79, 98 saving caller’s register values, 343–346 PUSH (Push operand onto top of stack"
    ],
    "pages": [
      "348–350 476–477"
    ],
    "title": [
      "See also CALL (continued) CALL instruction to address in registers as macros compared to, 379–385, randtest technique, 483–484 389–391 explanation of why some bits are more maintainability and reuse, 367–368 random than others, 482–483 mechanics of external, 357–361 overview of, 475–476 mechanics of global, 361–365 rand() function for generating, 477–482 placing constant data in procedure srand() function for getting seed value, definitions"
    ],
    "type": null
  },
  {
    "note": [
      "RCL (Rotate Carry Left), 288–289 REP prefix RCR (Rotate Carry Right), 288–289 copying tm structure with MOVSD, 466–469 read-only memory (ROM), 71 ECX decrement and, 408–409 real mode MOVSB with, 418–419 memory, 82 single-stepping with Insight Debugger, memory addresses and, 211–212 418–419 real mode flat model STOSB with, 403–404 overview of, 78 STOSB without, 407 programming model for x86 CPU, 97–99 REPE prefix, 435–436"
    ],
    "type": null
  }
]
