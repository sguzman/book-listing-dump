[
  {
    "director": [
      {
        "family": "MainText.push_back",
        "given": "MainTextpush_back"
      },
      {
        "family": "MainText.push_back",
        "given": "MainTextpush_back"
      },
      {
        "given": "MainTextpush_back"
      }
    ],
    "type": null
  },
  {
    "author": [
      {
        "family": "MainText.push_back",
        "given": "MainTextpush_back"
      },
      {
        "family": "MainText.push_back",
        "given": "MainTextpush_back"
      }
    ],
    "container-title": [
      "MainText.push_back(“useless”"
    ],
    "issue": [
      "6"
    ],
    "pages": [
      "345"
    ],
    "type": "article-journal",
    "volume": [
      "9"
    ]
  },
  {
    "editor": [
      {
        "family": "TempString.push_back",
        "given": "A.C.C.U.M.U.L.A.T.E.D.A.T.A.A.N.D.C.R.E.A.T.E.A.S.E.Q.U.E.N.C.E.O.F.S.U.M.S."
      },
      {
        "given": "TempStringpush_back"
      }
    ],
    "type": null
  },
  {
    "note": [
      "Anderson, Peter: (619)545-1551 Barney, Tom: (541)768-2322 Smith, John: (206)768-1290 Smith, John: (212)123-4567 Smith, Robert: (503)202-7656 The output that was produced on my computer with Microsoft Visual C++ version 5 kept the original order of the equal records Smith, John: (206)768-1290 Smith, John: (212)123-4567"
    ],
    "title": [
      "The output of the program shows that the algorithm sorted the phone book entries using only the name fields"
    ],
    "type": null
  },
  {
    "note": [
      "first C++ program, 13-15 reading, 249, 254-256 loop statements, 22-23 sorting, 319 EXCEPTH directory, 411 vectors exception classes, 410 inserting, 250-254 implementation, 425-429 modifying, 257-260 exception handling, 409-439 reading, 254-256 LIFO data model, 261 ellipsis in catch clause, 424 potential error conditions, 411-418 embedded allocators (STL containers), 253 programs, writing, 41-50 encapsulation, 54, 56, 62-63, 72, 87-91, 108, 122, rethrowing exceptions, 410"
    ],
    "pages": [
      "362–368"
    ],
    "title": [
      "container ranges, repeating actions, 333-337 examining source code containers, 250 allocating and deallocating memory accumulated sums, 345-351 program, 39-41 accumulating, 319 calculations program, 18-19 displaying all, 273-278 derived data types program, 31-36 modifying, 249, 257-260 exception handling program, 44-49 order"
    ],
    "type": null,
    "volume": [
      "319"
    ]
  },
  {
    "citation-number": [
      "128-134"
    ],
    "issue": [
      "rowing, 410"
    ],
    "note": [
      "security and, 134 specifying for functions, 430-434 enumeration types, 76 unexpected, 434-437"
    ],
    "pages": [
      "419–425"
    ],
    "title": [
      "exception specification, 45 accessing data, 144-148 exceptions data access, 109 functions, specifying, 410 friend functions and"
    ],
    "type": null,
    "volume": []
  },
  {
    "author": [
      {
        "given": "E.O.F."
      }
    ],
    "container-title": [
      "overloading"
    ],
    "note": [
      "delete, 40 errno variable, clearing, 382 initializer, 40 error conditions (IOStreams classes), 533 new, 39-40, 79 error detection return, 15 reading files, 375, 395-397 validity testing, 385 writing to files, 375 external functions (file-local function), 555-556 error handlers, declaration, 436 external programs, hiding data, 118-128 error handling, 374-407 extracting data (STL implementations), 530-531 function error values, 400 extraction operator maintaining state, 397-399 described, 20"
    ],
    "pages": [
      "139–144"
    ],
    "title": [
      "526 EXCLASS directory, 426 eof error, 533 exit function, 375, 393-395 reading files, 529-532 ExitCurrentScope, 267 equal algorithm, 318, 338-341 exiting functions, forcing, 267 Equal( ) function, 163 expressions equality operators"
    ],
    "type": "article-journal",
    "volume": [
      "109"
    ]
  }
]
