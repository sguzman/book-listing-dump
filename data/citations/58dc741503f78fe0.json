[
  {
    "author": [
      {
        "family": "C++",
        "given": "G.U.I."
      }
    ],
    "citation-number": [
      "Blanchette08"
    ],
    "date": [
      "2008"
    ],
    "edition": [
      "Second"
    ],
    "editor": [
      {
        "family": "Blanchette",
        "given": "Jasmin"
      },
      {
        "family": "Summerfield",
        "given": "Mark"
      }
    ],
    "publisher": [
      "Prentice Hall"
    ],
    "title": [
      "Programming with Qt 4"
    ],
    "type": "book"
  },
  {
    "author": [
      {
        "family": "Summerfield",
        "given": "Advanced Qt Programming Mark"
      }
    ],
    "citation-number": [
      "Summer11"
    ],
    "date": [
      "2011"
    ],
    "publisher": [
      "Prentice Hall"
    ],
    "type": "book"
  },
  {
    "citation-number": [
      "Thelin07"
    ],
    "container-title": [
      "Johan Thelin"
    ],
    "date": [
      "2007"
    ],
    "publisher": [
      "Apress.com"
    ],
    "title": [
      "Foundations of Qt Development"
    ],
    "type": "article-journal"
  },
  {
    "citation-number": [
      "Molkentin06"
    ],
    "container-title": [
      "Daniel Molkentin"
    ],
    "date": [
      "2006"
    ],
    "publisher": [
      "No Starch Press"
    ],
    "title": [
      "The Book of Qt 4"
    ],
    "type": "article-journal"
  },
  {
    "author": [
      {
        "given": "kdestyle"
      }
    ],
    "container-title": [
      "Coding Style.kde.org.1"
    ],
    "title": [
      "KDE Style Guidelines"
    ],
    "type": "chapter"
  },
  {
    "author": [
      {
        "given": "qtapistyle"
      }
    ],
    "container-title": [
      "Matthias Ettrich"
    ],
    "date": [
      "2005"
    ],
    "pages": [
      "2"
    ],
    "title": [
      "Designing Qt-Style C++ APIs"
    ],
    "type": "article-journal"
  },
  {
    "author": [
      {
        "given": "qtapistyle"
      }
    ],
    "container-title": [
      "Community Project"
    ],
    "date": [
      "2010"
    ],
    "pages": [
      "3"
    ],
    "title": [
      "Qt Coding Style"
    ],
    "type": "article-journal"
  },
  {
    "author": [
      {
        "given": "qttestlib"
      }
    ],
    "container-title": [
      "Brad Hards"
    ],
    "date": [
      "2005"
    ],
    "pages": [
      "4"
    ],
    "title": [
      "Writing Unittests for Qt 4 and KDE4 with QtTestLib"
    ],
    "type": "article-journal"
  },
  {
    "author": [
      {
        "family": "Buschmann",
        "given": "Pattern-Oriented Software Architecture First Edition Frank"
      },
      {
        "family": "Meunier",
        "given": "Regine"
      },
      {
        "family": "Rohnert",
        "given": "Hans"
      },
      {
        "family": "Sommerlad",
        "given": "Peter"
      },
      {
        "family": "Stal",
        "given": "Michael"
      }
    ],
    "citation-number": [
      "Buschmann96"
    ],
    "date": [
      "1996"
    ],
    "pages": [
      "0–471–95869–7"
    ],
    "publisher": [
      "John Wiley & Sons"
    ],
    "type": "book"
  },
  {
    "author": [
      {
        "family": "Distilled",
        "given": "U.M.L."
      }
    ],
    "citation-number": [
      "Fowler04"
    ],
    "date": [
      "2004"
    ],
    "edition": [
      "Third"
    ],
    "location": [
      "Martin Fowler"
    ],
    "pages": [
      "0–321–19368–7"
    ],
    "publisher": [
      "Addison Wesley"
    ],
    "type": "book"
  },
  {
    "citation-number": [
      "Gamma95"
    ],
    "date": [
      "1995"
    ],
    "editor": [
      {
        "family": "Gamma",
        "given": "Erich"
      },
      {
        "family": "Helm",
        "given": "Richard"
      },
      {
        "family": "Johnson",
        "given": "Ralph"
      },
      {
        "family": "Vlissides",
        "given": "John"
      }
    ],
    "pages": [
      "– 0–201–63361–2"
    ],
    "title": [
      "Design Patterns: Elements of Reusable Object-Oriented Software"
    ],
    "type": null
  },
  {
    "author": [
      {
        "given": "Patterns"
      },
      {
        "family": "Koenig",
        "given": "Antipatterns Andrew"
      }
    ],
    "citation-number": [
      "Koenig95"
    ],
    "container-title": [
      "Journal of Object-Oriented Programming"
    ],
    "date": [
      "1995"
    ],
    "issue": [
      "1"
    ],
    "pages": [
      "46–48"
    ],
    "type": "article-journal",
    "volume": [
      "8"
    ]
  },
  {
    "citation-number": [
      "Martin98"
    ],
    "date": [
      "1998"
    ],
    "editor": [
      {
        "family": "Martin",
        "given": "Robert C."
      },
      {
        "family": "Riehle",
        "given": "Dirk"
      },
      {
        "family": "Buschmann",
        "given": "Frank"
      }
    ],
    "pages": [
      "– 293–312 0–201–31011–2"
    ],
    "title": [
      "Pattern Languages of Program Design 3"
    ],
    "type": null
  },
  {
    "citation-number": [
      "xhtmlw3c"
    ],
    "date": [
      "2005"
    ],
    "note": [
      "W3C (World Wide Web Consortium).7"
    ],
    "title": [
      "w3c Recommendation: XHTML 1.0 The Extensible HyperText Markup Language"
    ],
    "type": null
  },
  {
    "author": [
      {
        "given": "dist"
      }
    ],
    "title": [
      "The web accessible site from which you can download example source code and other useful resources"
    ],
    "type": null,
    "url": [
      "http://informit.com/title/9780132826457"
    ]
  },
  {
    "author": [
      {
        "family": "Friedl",
        "given": "Mastering Regular Expressions Second Edition Jeffrey"
      }
    ],
    "citation-number": [
      "Friedl98"
    ],
    "date": [
      "1998"
    ],
    "pages": [
      "1–56592–257–3"
    ],
    "type": null
  },
  {
    "citation-number": [
      "Rehman03"
    ],
    "container-title": [
      "Christopher Paul"
    ],
    "date": [
      "2003"
    ],
    "pages": [
      "0–13–009115–4"
    ],
    "publisher": [
      "Prentice Hall"
    ],
    "title": [
      "The Linux Development Platform. Rafeeq Ur Rehman"
    ],
    "type": "article-journal"
  },
  {
    "author": [
      {
        "family": "Computing",
        "given": "Introduction",
        "particle": "to"
      },
      {
        "family": "Java",
        "given": "A.Multimedia Approach Mark Guzdial",
        "particle": "Programming with"
      },
      {
        "family": "Ericson",
        "given": "Barbara"
      }
    ],
    "citation-number": [
      "Guzdial07"
    ],
    "date": [
      "2007"
    ],
    "note": [
      "Index"
    ],
    "pages": [
      "0–13–149698–0"
    ],
    "publisher": [
      "Prentice Hall"
    ],
    "type": null,
    "url": [
      "http://www.w3.org/TR/xhtml1/"
    ]
  },
  {
    "author": [
      {
        "family": "DOM",
        "given": "X.M.L.",
        "particle": "generation with"
      }
    ],
    "container-title": [
      "See libraries Qonsole class"
    ],
    "pages": [
      "514–520"
    ],
    "title": [
      "473-476 concurrency XML parser output, 466 process control, 506-522 XML streams, 477-479 environments, 510-514 code libraries. See libraries exercises, 520-522 code reuse"
    ],
    "type": "chapter"
  },
  {
    "author": [
      {
        "family": "ODB",
        "given": "Code Synthesis"
      }
    ],
    "note": [
      "algorithm, 533-536 ArgumentList class, 200-204 parallel prime number calculator example, in main() function,"
    ],
    "pages": [
      "44–46 526–532"
    ],
    "title": [
      "541 threads, 522-536 coding standards, 115-116 exercises, 536-537 Command design pattern, 343-351 guidelines for, 523 command-line arguments mapReduce("
    ],
    "type": null
  },
  {
    "note": [
      "database playlists (music player example), 661 context menus, 327 database programming, 539-541 continue statements, 563 database models, 548-549 control structures DDL statements, 542-543 definition of term, 555 drivers needed, 540 exercises, 560-561 prepared statements, 543-545 explained, 558 QSqlDatabase class, 541-545 if statements, 558-559 queries and result sets, 546-548 switch statements, 559-560 SQLite, 540 controllers, 286 datatypes. See types MVC (Model-View-Controller), 400-402 DDL statements, 542-543 conversion constructors, 91-94, 580 Debian conversion operators, overloading, 581-582 alternative versions, symbolic links to, 697"
    ],
    "pages": [
      "365–368"
    ],
    "title": [
      "managed containers, 206-210 pointer containers, 206, 210-228 data members, 68, 69. See also properties copying, 211 for base classes, initializing, 173-174 exercises, 224-228 static keyword, 82-84 library example, 212-224 data transfer via clipboard, 341-343 Qt container classes, 204-206 database models, 548-549 value containers"
    ],
    "type": null,
    "volume": [
      "206"
    ]
  },
  {
    "note": [
      "design patterns dock windows, 337-338 antiPatterns, 254-257 Document Object Model (DOM), 462, 466-476 Command, 343-351, 344-351 tree walking, 467-471 Composite,",
      "online resources for Qt, 24-25 benefits of factories, 488-490 DOM (Document Object Model), 462, 466-476 exercises, 490-491 tree walking, 467-471 Singleton, 482, 487-488 XML generation, 472-476 explained, 248-249 do..while loops, 562 Façade, 498-505 downcasting, 381,"
    ],
    "pages": [
      "264–272,",
      "483–487",
      "587–589"
    ],
    "title": [
      "467 XML generation, 472-476 child management, 269-272 documentation finding children, 267-268 for header files, 664-665 creational design patterns, 481-491 online documentation, browsing, 7 Abstract Factory"
    ],
    "type": "webpage",
    "volume": [
      "259",
      "482",
      "469"
    ]
  },
  {
    "note": [
      "threads, 536-537 filtering types and expressions, 592-594 playlists (music player example), 661 validation,",
      "671 ANSI C++ typecasts, 574-580 frameworks C-style casts, 574, 579 explained, 247-248 RTTI (runtime type identification), 587-590 MVC (Model-View-Controller), 400-402 implicit type conversions, 570-574 Qt model-view, 402-413 logical expressions, evaluating, 564-565 delegate classes, 409-413 regular expressions, 440-449 model indexes, 404 examples of, 443 multiple views, 406-408 exercises, 448-449, 454-455 QFileSystemModel class, 404-405 phone number recognition example, 444-448 QTestLib, 277-281 syntax, 440-442 free storage area, 606 validation, 449-451 friend keyword, 76-77 extending functions, 174 function call operator, overloading, 585-587 eXtensible Markup Language. See XML (eXtensible function pointers, 368-371"
    ],
    "title": [
      "454-455 table models, 422-424 validators, 440 findChildren() function, 267-268 exit status, 44 finding explicit constructors, 260 header files, 23-24 explicit keyword, 94 memory errors, 682-687 explicit type conversions missing definitions, 676-677 ANSI C++ typecasts, 574-580 missing vtable references, 677 C-style casts, 574, 579 Flyweight design pattern, 371-375 RTTI (runtime type identification), 587-590 folders, traversing, 127-129 export macros, defining, 242-243 for loops, 562 exporting symbols, 677 foreach() macro, 218 exporting to XML, 493-495 form design with Designer, 307-309 expressions form layout, 292-294, 313-314 definition of term, 552 forward class declarations, 87-88, 240-241 exercises, 592-594 forward declarations, including header files explicit type conversions versus"
    ],
    "type": null
  },
  {
    "note": [
      "evaluating, 564-565 Qt XML parsers, 460-462 member selection operators, 590-591 DOM (Document Object Model), 462, 466-476 overloading, 141-146 SAX (Simple API for XML), 461, 462-466 scope resolution operators, 604-606 passing parameters sizeof() operator, 42 by reference, 148-152 for streams, 250-254 by value, 146-148 subscript operator, overloading, 583-584 PATH environment variable, 510, 674"
    ],
    "title": [
      "copy assignment operator, 89, 194 for processes, 512-514 definition of term, 552 QLayout class, 299-300 dereference operator (*), 54-57 for threads, 524 dynamic storage allocation operators, for widgets, 284 57-59, 620-623 parse event handlers, 463 function call operator, overloading, 585-587 parsing XML generics and, 362-364 Memento design pattern and, 491-498 logical expressions"
    ],
    "type": null
  },
  {
    "note": [
      "runtime type identification), 380-382, validate() function, 438 587-590 validation, 434 simple types, 40-53 exercises, 454-455 arithmetic operations, 46-50 input masks, 435-438 command-line arguments, 44-46 regular expressions, 449-451 exercises, 50-53 subclassing QValidator class, 451-454 initializing variables, 43-44 validators, 438-440"
    ],
    "title": [
      "integral types, signed versus unsigned, 567-570 V of literals, 37-39 metatypes, declaring and registering, 394-396 -v command-line switch, 703 polymorphic types, 636 valgrind profiler, 682-687 RTTI"
    ],
    "type": null
  }
]
