[
  {
    "citation-number": [
      "692"
    ],
    "note": [
      "453–455 exercises, 643–644 overview of, 449 InvalidArgumentExceptionDemo.cpp, 626–627 summary, 469 multiple catches, 632–637 WrongReverse.cpp, 449–451 overview of, 617–618 dynamic_cast operator, 609–614 Quotient.cpp, 618 QuotientThrowRuntimeError.cpp, 624–625 QuotientWithException.cpp, 619–621"
    ],
    "title": [
      "Index Dynamic casting BadCastExceptionDemo.cpp, 625–626 dynamic_cast operator, 609–614 custom exception classes, 627–628 overview of, 626 exception classes, 623–624 Dynamic memory allocation exception propagation, 637–638 CorrectReverse.cpp, 451–453 exception specification, 640–641 creating and accessing dynamic objects"
    ],
    "type": null
  },
  {
    "citation-number": [
      "694"
    ],
    "note": [
      "250–253 GenericMaxValue.cpp, 477–478 exercises, 272–283 GenericMaxValuePassByReference.cpp, 478–480 exponent functions, 139 Generic programming, 588–589 formatting, 160–161 Geometry generic. see Generic functions function exercises, 276, 279 implementing abstract functions in concrete derived mathematical function exercises, 168–170"
    ],
    "title": [
      "Index Functions (continued ) Generic functions defining, 229 benefits of generic types, 476–477 defining nonmember functions, 562–563 defining generic sort, 480–482 defining object behaviors, 362 developing generic class with class templates, 482–484 defining operators as. see Operator overloading for generic version of Stack class, 484–488 examples of use of"
    ],
    "type": null
  },
  {
    "note": [
      "93–95 classes, 601–602 SimpleIfDemo.cpp, 95–96 overview of, 580, 587 if-else statements polymorphism and, 595–596 dangling else ambiguity, 101 redefining base class functions in derived classes, 594–595 multi-way, 97–99 summary, 614–615 problem solving using recursion, 653 TestGeometricObject.cpp, 586–587, 607–609 two-way, 96–97 virtual functions and dynamic binding, 596–600"
    ],
    "title": [
      "Identifiers, for program elements, 55 DerivedRectangle.cpp, 585–586 if statements DerivedRectangleFromAbstractGeometricObject. common errors, 99–101 cpp, 606–607 computing BMI (Body Mass Index), 104–105 DynamicCastingDemo.cpp, 611–614 computing taxes, 106–108 exercises, 615–616 determining leap year, 115 generic programming and, 588–589 exception handling and, 641 GeometricObject.cpp, 582 nested, 97–99 implementing abstract functions in concrete derived overview of"
    ],
    "type": null
  }
]
